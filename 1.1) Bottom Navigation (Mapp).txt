Bottom Navigation.

	! Главный элемент Material Design. (Он есть во всех топовых приложениях)
	! Это горизонтальный бар внизу над кнопками: назад, домой, етк.
	! Гугл рекоммендует вкладывать туда не меньше 3, и не больше 5 кнопок.
	! Основной контент экрана заходит под Bottom Navigation (Но можем задать внутренние отступы снизу)

-----------------------------------------------------

1) Создаем Bottom Navigation.
	
	! Создать папку меню: res - New - Directory - menu
	! Создать меню: menu - New - Menu Resource File - name: bottom_menu
	! Создаем 4 иконки: drawable - New - Vector Asset (home, shop, delivery, account)
	! Создаем 4 стринга в ресурсах: HOME, SHOP, DELIVERY, ACCOUNT
	! Создаем 4 Фрагмента: Home, Shop, Delivery, Account

-----------------------------------------------------

Дальше: bottom_menu.xml

	<?xml version="1.0" encoding="utf-8"?>
	<menu
		xmlns:android="http://schemas.android.com/apk/res/android"
		xmlns:app="http://schemas.android.com/apk/res-auto">
		
		// item - Создает кнопку меню
		<item          
			android:id="@+id/homeItemId"
			android:icon="@drawable/home"
			android:title="@string/home"
			// Какой бы не был большой экран - всеравно отображать кнопки меню
			app:showAsAction="ifRoom"/>
			
		<item
			android:id="@+id/shopItemId"
			android:icon="@drawable/shop"
			android:title="@string/shop"
			app:showAsAction="ifRoom"/>

		<item
			android:id="@+id/deliveryItemId"
			android:icon="@drawable/delivery"
			android:title="@string/delivery"
			app:showAsAction="ifRoom"/>

		<item
			android:id="@+id/accountItemId"
			android:icon="@drawable/account"
			android:title="@string/account"
			app:showAsAction="ifRoom"/>	

	</menu>

-----------------------------------------------------

Добавляем контент во все 4 Фрагмента.xml: (Созданная Иконка по середине экрана)

	<?xml version="1.0" encoding="utf-8"?>
	<FrameLayout
		xmlns:android="http://schemas.android.com/apk/res/android"
		xmlns:tools="http://schemas.android.com/tools"
		xmlns:app="http://schemas.android.com/apk/res-auto"
		android:layout_width="match_parent"
		android:layout_height="match_parent"
		tools:context=".Account">

		<androidx.constraintlayout.widget.ConstraintLayout
			android:layout_width="match_parent"
			android:layout_height="match_parent">

			<androidx.appcompat.widget.AppCompatImageView
				android:layout_width="wrap_content"
				android:layout_height="wrap_content"
				app:layout_constraintTop_toTopOf="parent"
				app:layout_constraintBottom_toBottomOf="parent"
				app:layout_constraintStart_toStartOf="parent"
				app:layout_constraintEnd_toEndOf="parent"
				android:src="@drawable/account"/>

		</androidx.constraintlayout.widget.ConstraintLayout>

	</FrameLayout>

-----------------------------------------------------

Меняем цвет иконок меню при тапе: (Уникальная инфа)

	! Создаем папку: res - New - Directory - color
	! Создаем файл цветов: color - New - Color Resource File - name: color_tab
	
	<?xml version="1.0" encoding="utf-8"?>
	<selector xmlns:android="http://schemas.android.com/apk/res/android">
		// Переменная цвет при тапе
		<item android:color="@android:color/holo_orange_dark" android:state_selected="true"/>
		// Переменная цвет при обычном состоянии
		<item android:color="@color/white" android:state_checked="false"/>
	</selector>

-----------------------------------------------------

Дальше: activity_main.xml

	<?xml version="1.0" encoding="utf-8"?>
	<layout
		xmlns:android="http://schemas.android.com/apk/res/android"
		xmlns:app="http://schemas.android.com/apk/res-auto"
		xmlns:tools="http://schemas.android.com/tools">

		<androidx.constraintlayout.widget.ConstraintLayout
			android:layout_width="match_parent"
			android:layout_height="match_parent"
			tools:context=".MainActivity">
			
			<FrameLayout
				android:id="@+id/content"
				android:layout_width="match_parent"
				android:layout_height="match_parent"
				app:layout_constraintBottom_toBottomOf="parent"
				app:layout_constraintTop_toTopOf="parent"
				app:layout_constraintLeft_toLeftOf="parent"
				app:layout_constraintRight_toRightOf="parent"/>

			<androidx.coordinatorlayout.widget.CoordinatorLayout
				android:layout_width="match_parent"
				android:layout_height="wrap_content"
				app:layout_constraintBottom_toBottomOf="parent"
				app:layout_constraintStart_toStartOf="parent"
				app:layout_constraintEnd_toEndOf="parent">
			
				<com.google.android.material.bottomnavigation.BottomNavigationView
					android:id="@+id/bottomNav"
					android:layout_width="match_parent"
					// Высота стандартная для иконок
					android:layout_height="?attr/actionBarSize"
					// Фон меню
					android:background="@color/black"
					// Небольшое затемнение (выпуклость) заметна на белом фоне
					android:elevation="16dp"
					// Цвет иконки из файла color (Тот что выше создали)
					app:itemIconTint="@color/color_tab"
					// Цвет текста под иконкой из файла color (Тот что выше создали)
					app:itemTextColor="@color/color_tab"
					// Привязываем наше созданное меню (Выше)
					app:menu="@menu/bottom_menu"/>
			
			</androidx.coordinatorlayout.widget.CoordinatorLayout>


		</androidx.constraintlayout.widget.ConstraintLayout>
	</layout>

-----------------------------------------------------

Дальше: MainActivity.kt
		
		class MainActivity : AppCompatActivity() {

		private var binding: ActivityMainBinding? = null

		override fun onCreate(savedInstanceState: Bundle?) {
			super.onCreate(savedInstanceState)
			binding = DataBindingUtil.setContentView(this, R.layout.activity_main)

			// Подгружаем на стартовый экран фрагмент Home, при старте приложения
			supportFragmentManager.beginTransaction().replace(R.id.content, Home()).commit()

				// Реализуем Bottom Navigation по новому способу
				binding?.bottomNav?.setOnItemSelectedListener { item ->
					
					when(item.itemId){
						R.id.homeItemId -> supportFragmentManager.beginTransaction().replace(R.id.content, Home()).commit()
						R.id.shopItemId -> supportFragmentManager.beginTransaction().replace(R.id.content, Shop()).commit()
						R.id.deliveryItemId -> supportFragmentManager.beginTransaction().replace(R.id.content, Delivery()).commit()
						R.id.accountItemId -> supportFragmentManager.beginTransaction().replace(R.id.content, Account()).commit()
					}

					return@setOnItemSelectedListener true

				}

				// На боттом навигатион иконка Home будет активна при старте приложения (По умолчанию первый Слева)
				binding?.bottomNav?.selectedItemId = R.id.homeItemId

			}
		}

-----------------------------------------------------

Результат:
	https://piccy.info/view3/15079023/2aee4847b6d5d325420f3d81a4374cf6/